@page
@model IndexModel
@{
    ViewData["Title"] = "Home";
}

<div class="d-flex align-items-center justify-content-between mb-3">
    <h1 class="h3 mb-0">Shopping List</h1>
</div>

<section id="tab-buy" class="mb-5">
    <div class="d-flex flex-wrap align-items-center justify-content-between gap-2 mb-3">
        <h2 class="h5 mb-0">Buy List</h2>
        <div class="d-flex flex-wrap align-items-center gap-2">
            <button type="button"
                    class="btn btn-outline-primary"
                    id="open-master-catalog-button"
                    data-bs-toggle="modal"
                    data-bs-target="#masterCatalogModal">
                Open master catalog
            </button>
        </div>
    </div>

    <p data-empty-placeholder class="text-muted" style="display:@(Model.BuyList.Any() ? "none" : "")">
        Nothing to buy right now.
    </p>

    <div data-buy-container="true">
        @foreach (var group in Model.BuyList
            .GroupBy(x => string.IsNullOrWhiteSpace(x.Category) ? "Uncategorized" : x.Category)
            .OrderBy(g => g.Key == "Uncategorized" ? 0 : 1)
            .ThenBy(g => g.Key))
        {
            var isMemoGroup = group.Key == "Uncategorized";
            var heading = isMemoGroup ? string.Empty : group.Key;
            <article class="mb-4" data-category-block="@group.Key" data-section="buy">
                @if (!string.IsNullOrWhiteSpace(heading))
                {
                    <h3 class="h6 text-uppercase text-muted mb-2">@heading</h3>
                }
                <ul class="list-group shadow-sm">
                    @foreach (var it in group)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center gap-3"
                            data-item-id="@it.Id"
                            data-item-name="@it.Name"
                            data-category="@group.Key"
                            data-section="buy"
                            data-linked="@(!isMemoGroup).ToString().ToLower()">
                            <div class="d-flex align-items-center gap-2 flex-grow-1">
                                <input class="form-check-input" type="checkbox" data-action="mark-purchased" />
                                <div class="buy-item-label">
                                    @if (!isMemoGroup)
                                    {
                                        <i class="bi bi-link-45deg text-primary" aria-hidden="true"></i>
                                    }
                                    <span class="buy-item-text fw-semibold">@it.Name</span>
                                </div>
                            </div>
                            @if (isMemoGroup)
                            {
                                <button type="button" class="btn btn-outline-secondary btn-sm" data-action="remove-item">Remove</button>
                            }
                        </li>
                    }
                </ul>
            </article>
        }
    </div>

    <div class="d-flex align-items-center justify-content-between mt-5 pt-3 border-top"
         data-buy-footer="true">
        <button type="button" class="btn btn-outline-secondary" id="buy-refresh-button">Reflesh</button>
        <button type="button"
                class="btn btn-primary btn-circle d-flex align-items-center justify-content-center"
                id="buy-list-add-button"
                data-bs-toggle="modal"
                data-bs-target="#buyAddModal"
                aria-label="Add to buy list">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16" aria-hidden="true">
                <path d="M7.5 1.5a.5.5 0 0 1 1 0V7h5.5a.5.5 0 0 1 0 1H8.5v5.5a.5.5 0 0 1-1 0V8H2a.5.5 0 0 1 0-1h5.5z" />
            </svg>
            <span class="visually-hidden">Add to buy list</span>
        </button>
    </div>
</section>

<div class="modal fade" id="masterCatalogModal" tabindex="-1" aria-labelledby="masterCatalogModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="masterCatalogModalLabel">Master Catalog</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="master-modal-body">
                <div class="mb-3">
                    <div class="input-group input-group-sm" style="max-width: 320px;">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" class="form-control" id="master-search" placeholder="Search master items" autocomplete="off" />
                    </div>
                </div>

                <p data-empty-placeholder class="text-muted" style="display:@(Model.MasterItems.Any() ? "none" : "")">
                    No master items yet.
                </p>

                <div id="master-categories" class="d-flex flex-column gap-4">
                    @foreach (var group in Model.MasterItems
                        .GroupBy(x => string.IsNullOrWhiteSpace(x.Category) ? "Uncategorized" : x.Category)
                        .OrderBy(g => g.Key))
                    {
                        <div class="master-category" data-category-block="@group.Key" data-section="master">
                            @{ var displayCategory = group.Key == "Uncategorized" ? string.Empty : group.Key; }
                            @if (!string.IsNullOrWhiteSpace(displayCategory))
                            {
                                <h3 class="h6 text-uppercase text-muted mb-2">@displayCategory <span class="badge bg-light text-secondary">@group.Count()</span></h3>
                            }
                            <ul class="list-group shadow-sm">
                                @foreach (var it in group.OrderBy(x => x.Name))
                                {
                                    var inList = !it.IsAvailable;
                                    var updatedIso = it.LastUpdated.HasValue ? it.LastUpdated.Value.ToUniversalTime().ToString("o") : string.Empty;
                                    var updatedDisplay = it.LastUpdated.HasValue ? it.LastUpdated.Value.ToLocalTime().ToString("yyyy/MM/dd HH:mm") : "-";
                                    <li class="list-group-item d-flex align-items-center gap-3"
                                        data-master-item
                                        data-item-id="@it.Id"
                                        data-item-name="@it.Name"
                                        data-category="@group.Key"
                                        data-in-list="@(inList.ToString().ToLower())"
                                        data-updated="@updatedIso">
                                        <button type="button"
                                                class="master-toggle @(inList ? "is-active" : "")"
                                                data-action="master-toggle"
                                                aria-label="Toggle list state"
                                                aria-pressed="@(inList.ToString().ToLower())">
                                            <svg class="icon-check-circle text-primary @(inList ? "" : "d-none")" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 16 16" aria-hidden="true">
                                                <path fill="currentColor" d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zm3.28 5.72a.75.75 0 0 0-1.06-1.06L7 7.94 5.78 6.72a.75.75 0 1 0-1.06 1.06l1.75 1.75a.75.75 0 0 0 1.06 0z" />
                                            </svg>
                                            <svg class="icon-plus-circle text-secondary @(inList ? "d-none" : "")" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 16 16" aria-hidden="true">
                                                <path fill="currentColor" d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zm.5 3.5a.5.5 0 0 0-1 0V7H3.5a.5.5 0 0 0 0 1H7v3.5a.5.5 0 0 0 1 0V8h3.5a.5.5 0 0 0 0-1H8.5z" />
                                            </svg>
                                            <span class="visually-hidden">@(inList ? "In the list" : "Add to list")</span>
                                        </button>
                                        <div class="flex-grow-1 fw-semibold">@it.Name</div>
                                        <span class="text-muted small" data-role="last-updated">@updatedDisplay</span>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                </div>

                <div class="d-flex justify-content-end mt-4">
                    <button type="button"
                            class="btn btn-primary btn-circle d-flex align-items-center justify-content-center"
                            id="master-add-button"
                            data-bs-toggle="modal"
                            data-bs-target="#masterAddModal"
                            aria-label="Add master item">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16" aria-hidden="true">
                            <path d="M7.5 1.5a.5.5 0 0 1 1 0V7h5.5a.5.5 0 0 1 0 1H8.5v5.5a.5.5 0 0 1-1 0V8H2a.5.5 0 0 1 0-1h5.5z" />
                        </svg>
                        <span class="visually-hidden">Add master item</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modals -->
<div class="modal fade" id="buyAddModal" tabindex="-1" aria-labelledby="buyAddModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="buyAddModalLabel">Add to Buy List</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body d-grid gap-3">
                <button type="button" class="btn btn-primary" data-choice="list">Select from master</button>
                <button type="button" class="btn btn-secondary" data-choice="memo">Add memo item</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="memoModal" tabindex="-1" aria-labelledby="memoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="memoModalLabel">Add memo item</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="memo-form">
                    <div class="mb-3">
                        <label class="form-label" for="memo-item-name">Item name</label>
                        <input id="memo-item-name" type="text" class="form-control" placeholder="e.g. Batteries" autocomplete="off" required />
                    </div>
                    <div class="text-end">
                        <button type="button" class="btn btn-outline-secondary me-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Add</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="masterAddModal" tabindex="-1" aria-labelledby="masterAddModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="masterAddModalLabel">Add master item</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="master-form">
                    <div class="mb-3">
                        <label class="form-label" for="master-item-name">Item name</label>
                        <input id="master-item-name" type="text" class="form-control" placeholder="e.g. Flour" autocomplete="off" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="master-item-category">Category</label>
                        <select id="master-item-category" class="form-select" required>
                            <option value="">Select a category</option>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                    <div class="text-end">
                        <button type="button" class="btn btn-outline-secondary me-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="module">
        import { initializeIndexPage } from "/js/site.js";

        initializeIndexPage();
    </script>
}







